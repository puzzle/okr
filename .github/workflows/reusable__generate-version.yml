# .github/workflows/reusable-versioning.yml
name: 'Reusable - Generate Version'

on:
  workflow_call:
    inputs:
      version_strategy_or_hash:
        description: 'Major, Minor, Patch or commit hash '
        required: true
        type: string

    outputs:
#      COMMIT_HASH:
#        description: "The full commit hash determined."
#        value: ${{ jobs.versioning.outputs.COMMIT_HASH }}
      SHORT_COMMIT_HASH:
        description: "The short commit hash determined."
        value: ${{ jobs.find-commit.outputs.SHORT_COMMIT_HASH }}
      SEMVER_VERSION:
        description: "The calculated semantic version (e.g., 1.2.3)."
        value: ${{ jobs.read-version.outputs.SEMVER_VERSION }}
      IMAGE_TAG:
        description: "Tag suffix based on version and commit (e.g., 1.2.3-abcdef)."
        value: ${{ jobs.versioning.outputs.IMAGE_TAG_SUFFIX }}

    secrets:
      GH_TOKEN:
        description: 'GitHub token with contents:write permission to push version updates.'
        required: true

jobs:

  find-commit:
    runs-on: ubuntu-24.04
    #    needs: verify-input
    outputs:
#      COMMIT_HASH: "${{ env.COMMIT_HASH }}"
      SHORT_COMMIT_HASH: "${{ env.SHORT_COMMIT_HASH }}"
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Stores the commit hash as environment variable
        run: |
          commit_hash=$(./scripts/get-commit.sh ${{ env.BRANCH_NAME }} ${{ github.event.inputs.commit_hash }})
          echo "Commit is set to \"$commit_hash\""
          echo "COMMIT_HASH=$commit_hash" >> $GITHUB_ENV
          echo "SHORT_COMMIT_HASH=$(git rev-parse --short $commit_hash)" >> $GITHUB_ENV

      - name: Accessing the environment variable
        run: |
          echo "${{ env.SHORT_COMMIT_HASH }}"
  

  update-version:
    runs-on: ubuntu-24.04
    needs: find-commit
    if: github.event.inputs.deployment_type != 'Release from Commit'
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{env.BRANCH_NAME}}

      - name: Update version
        run: ./scripts/update-mvn-version.sh "${{ github.event.inputs.deployment_type }}"

      - name: Commit and Push Changes
        shell: bash
        env:
          COMMITPREFIX: '[VU]'
#          use github action to set git config
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git add . || {
            echo "No files were changed, so we did not commit anything"
            exit 1
          }
          git commit -m "$COMMITPREFIX Automated version update" || {
            echo "No changes to commit, skipping push"
            exit 0
          }
          git push -f origin ${{ env.BRANCH_NAME }}
  
  

  read-version:
    runs-on: ubuntu-24.04
    needs: [ update-version, find-commit ]
    permissions:
      packages: write
      id-token: write
      contents: write
      attestations: write
    outputs:
      SEMVER_VERSION: ${{ steps.read_version_step.outputs.SEMVER_VERSION }}
      NEW_IMAGE_TAG: "${{vars.DOCKER_REPOSITORY_URL}}:${{ steps.read_version_step.outputs.SEMVER_VERSION }}-${{ needs.find-commit.outputs.SHORT_COMMIT_HASH }}"
    env:
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{env.BRANCH_NAME}}

      - name: read version
        id: read_version_step
        run: |
          VERSION=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)
          echo "SEMVER_VERSION=$VERSION" >> $GITHUB_OUTPUT
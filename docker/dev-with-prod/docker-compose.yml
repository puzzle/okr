include:
  - ../docker-compose.yml
services:
  spring:
    user: "${UID:-1000}:${GID:-1000}"
    tty: true
    container_name: spring
    build:
      context: .
      dockerfile: local-prod.Dockerfile
    restart: always
    environment:
      SPRING_PROFILES_ACTIVE: dev
    volumes:
        - ../../../okr/backend/target:/app-root/backend
    network_mode: "host"
    depends_on:
      compiler:
        condition: service_healthy

  compiler:
    tty: true
    container_name: compiler
    restart: on-failure
    image: maven:3.9.9-amazoncorretto-21
    command: mvn package fizzed-watcher:run
#    user: "${UID:-1000}:${GID:-1000}"
    working_dir: /app-root/
    volumes:
      - ../../../okr:/app-root
      - mvn_cache:/root/.m2/repository
    healthcheck:
      test: bash -c "[ -f ./backend/target/backend-*.jar ]"
      interval: 10s
      retries: 999
      start_period: 30s
      timeout: 10s

#  maven-init:
#    tty: true
#    container_name: maven-init
#    image: maven:3.9.9-amazoncorretto-21
##    user: "${UID:-1000}:${GID:-1000}"
#    command: mvn -B clean package -P build-for-docker,debug,no-formatter
#    working_dir: /app-root/
#    volumes:
#      - ../../../okr:/app-root
##      - mvn_cache:/
#    depends_on:
#      angular:
#        condition: service_healthy

  angular:
    container_name: angular
    image: node:22
    tty: true
    user: "${UID:-1000}:${GID:-1000}"
    restart: on-failure
    volumes:
      - ../../../okr:/opt
    command: [ "/bin/bash", "-c", "cd /opt/frontend && rm -rf dist && npm ci && npm run watch:prod" ]
    healthcheck:
      test: bash -c "[ -f /opt/frontend/dist/frontend/index.html ]"
      interval: 10s
      retries: 999
      start_period: 30s
      timeout: 10s

volumes:
  node_modules:
  angular_cache:
  mvn_cache:
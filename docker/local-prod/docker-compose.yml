include:
  - ../docker-compose.yml
services:
  spring:
    container_name: spring
    build:
      context: .
      dockerfile: local-prod.Dockerfile
    restart: always
    ports:
      - 8080:8080
    environment:
      SPRING_PROFILES_ACTIVE: staging
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK: debug
    volumes:
        - ../../../okr/backend/target:/app-root/backend
    depends_on:
      maven:
        condition: service_completed_successfully

  maven:
    container_name: maven
    image: maven:3.8.3-openjdk-17
    volumes:
      - ../../../okr:/opt
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    command: [ "/bin/bash", "-c", "cd /opt && mvn -B clean package --file pom.xml -P build-for-docker && chown -R 1000:1000 ./backend/target" ]

  angular:
    container_name: angular
    image: node:20
    user: "${UID:-1000}:${GID:-1000}"
    volumes:
      - ../../../okr:/opt
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
    command: [ "/bin/bash", "-c", "cd /opt/frontend && npm ci && npm run watch:prod" ]
